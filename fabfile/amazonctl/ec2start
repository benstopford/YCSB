#!/bin/sh

# Script used to create a db cluster with a number of YCSB nodes

DB_NODE_COUNT=$1
YCSB_NODE_COUNT=$2

YCSB_AMI=$3
DB_AMI=$4

echo "Running ec2start with: $1 $2 $3 $4"

tagInsancesForAmi(){
    AMI=$1
    TAG_NAME=$2

    # Get the instance ids of the images we just started
    IDS=""
    while [[ -z "$IDS" ]]
    do
        IDS=`aws ec2 describe-instances --filters "Name=image-id,Values=$AMI" "Name=instance-state-name,Values=pending,running" | grep INSTANCES | awk {'print $8'}`
        printf "."
        sleep 1
    done
    echo "."

    # Add tag to each instance so we can identify it
    for ID in $IDS
    do
        aws ec2 create-tags --resources $ID --tags Key=Name,Value=$TAG_NAME
        echo "Created $TAG_NAME tag for $ID"
    done
}


startDbNodes(){
    echo "**STARTING DB CLUSTER**"

    # Start instances

    OUT=`aws ec2 run-instances --image-id $DB_AMI --count $DB_NODE_COUNT --instance-type m1.large --key-name datalabs-dsc1 --security-groups my-eu-sec-group --user-data "--clustername datalabs-cassandra --totalnodes $CASSANDRA_NODE_COUNT --version community"`

    #--block-device-mappings "[{\"DeviceName\":\"/dev/sda1\",\"Ebs\":{\"DeleteOnTermination\":true,\"SnapshotId\":\"snap-7ab4379e\",\"VolumeSize\":50,\"VolumeType\":\"gp2\"}}]"

    tagInsancesForAmi $DB_AMI "DB"


    OPS=`aws ec2 describe-instances --filters "Name=image-id,Values=$DB_AMI" "Name=instance-state-name,Values=pending,running" "Name=launch-index,Values=0"| grep ASSOCI | awk {'print $3'} | sort | uniq`

    ECHO "Created DB Instances"
}

startYcsbNodes(){
    echo "**STARTING YCSB INSTANCES**"

    OUT=`aws ec2 run-instances --image-id $YCSB_AMI --count $YCSB_NODE_COUNT --instance-type t2.micro --key-name datalabs-dsc1 --security-groups my-eu-sec-group`

    tagInsancesForAmi $YCSB_AMI "YCSB"
}

startDbNodes
startYcsbNodes
echo "All services have been started."







